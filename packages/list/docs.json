{
  "List": {},
  "ListItem": {
    "autoFocus": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "Whether or not the element is in the selected visual state. When active,\ntabindex is set to 0, and in some list item variants (like `ListItem`),\nfocuses the underlying item."
    },
    "centerRipple": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the ripples are centered. They won't start at the cursor\ninteraction position."
    },
    "disabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "Disables the item and makes it non-selectable and non-interactive."
    },
    "disableRipple": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the ripple effect is disabled."
    },
    "end": {
      "type": "| string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | ReactFragment\n  | ReactPortal",
      "required": false,
      "description": "The content rendered at the end of the list item."
    },
    "focusColor": { "type": "string", "required": false },
    "focusOpacity": { "type": "number", "required": false },
    "headline": {
      "type": "| string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | ReactFragment\n  | ReactPortal",
      "required": false,
      "description": "The primary, headline text of the list item."
    },
    "hoverColor": { "type": "string", "required": false },
    "hoverOpacity": { "type": "number", "required": false },
    "multilineSupportingText": {
      "type": "boolean",
      "required": false,
      "description": "Modifies `supportingText` to support multiple lines."
    },
    "onFocusVisible": {
      "type": "(event: NativeSyntheticEvent<TargetedEvent>) => void",
      "required": false,
      "description": "Callback fired when the component is focused with a keyboard. We also\ntrigger an `onFocus` callback."
    },
    "pressedColor": { "type": "string", "required": false },
    "pressedOpacity": { "type": "number", "required": false },
    "rippleColor": { "type": "string", "required": false },
    "start": {
      "type": "| string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | ReactFragment\n  | ReactPortal",
      "required": false,
      "description": "The content rendered at the start of the list item."
    },
    "supportingText": {
      "type": "| string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | ReactFragment\n  | ReactPortal",
      "required": false,
      "description": "The one-line supporting text below the headline. Set\n`multilineSupportingText` to `true` to support multiple lines in the\nsupporting text."
    },
    "surfaceTintColor": { "type": "string", "required": false }
  },
  "ListItemIcon": {},
  "ListItemImage": {}
}
